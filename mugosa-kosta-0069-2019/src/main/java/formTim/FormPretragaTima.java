package formTim;

import domain.Tim;
import forme.MainForm;
import models.TableModelTimovi;

/**
 * Forma za pretragu timova koji postoje u bazi.
 * 
 * @author Kosta
 */
public class FormPretragaTima extends javax.swing.JDialog {
	/**
     * Konstruktor koji sluzi za kreiranje same forme. Postavlja lokaciju same forme
     * na ekranu, postavlja naslov i inicijalizuje njene osnovne komponente.
     * @param parent forma roditelj iz koje se postojeca otvara
     * @param modal predstavlja modalitet
     */
    public FormPretragaTima(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        TableModelTimovi model = new TableModelTimovi();
        Thread th = new Thread(model);
        th.start();
        tblTimovi.setModel(model);
        setTitle("Pretraga tima");
    }

    /**
     * Metoda koja je napravljena od strane Form Editora sa osnovnim podesavanjima
     * i ne smije se mijenjati(inace je onemoguceno)
     * 
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTimovi = new javax.swing.JTable();
        txtPretraga = new javax.swing.JTextField();
        btnDetalji = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Pretraga (naziv tima):");

        tblTimovi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblTimovi);

        txtPretraga.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPretragaKeyReleased(evt);
            }
        });

        btnDetalji.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnDetalji.setText("Detalji tima");
        btnDetalji.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetaljiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPretraga))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 805, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(309, 309, 309)
                                .addComponent(btnDetalji, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDetalji)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        
    /**
     * Funkcionalnost koja prikazuje rezultate pretrage tek nakon sto je pusten
     * klik na tastaturi.
     * 
     * @param evt event listener
     */
    private void txtPretragaKeyReleased(java.awt.event.KeyEvent evt) {                                        
        String param = txtPretraga.getText();
        ((TableModelTimovi) tblTimovi.getModel()).setParametar(param);
    }                                       
    /**
     * Dugme koje na osnovu izabranog reda u tabeli pretrazenih timova prikazuje dalje
     * detalje o tom timu.
     * 
     * @param evt event listener
     */
    private void btnDetaljiActionPerformed(java.awt.event.ActionEvent evt) {                                           

        int row = tblTimovi.getSelectedRow();

        if (row >= 0) {
            Tim t = ((TableModelTimovi) tblTimovi.getModel()).getSelectedTim(row);
            new FormDetaljiTima(this, rootPaneCheckingEnabled, t).setVisible(true);
        }

    }                                          

    // Variables declaration - do not modify                     
    private javax.swing.JButton btnDetalji;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTimovi;
    private javax.swing.JTextField txtPretraga;
    // End of variables declaration                   
    /**
     * Poziva tabelu timove da se azuriraju automatski ukoliko je izvrseno
     * brisanje ili izmjena nekog tima iz baze.
     */
    void refreshTable() {
        TableModelTimovi tm = (TableModelTimovi) tblTimovi.getModel();
        tm.refreshTable();
    }
    /**
     * Omogucava da se na glavnoj formi azurira combo box sa timovima koji igraju
     * utakmice ukoliko je izvrseno brisanje ili izmjena datog tima iz baze.
     */
    void popuniTimove() {
        MainForm mf = (MainForm) getParent();
        mf.popuniTimove();
    }

}

